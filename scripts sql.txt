
/*Agregamos campos nuevos a tabla Cliente*/
ALTER TABLE cliente ADD COLUMN IdTipoDoc INT DEFAULT (96)
ALTER TABLE cliente ADD COLUMN IdTipoFact INT DEFAULT (2)
UPDATE TABLE cliente SET IdTipoFact = 3 WHERE FAfip = 0 


/*----------------------------------------------------------*/


/*Agregamos bandera estado facturado nuevos a tabla Pago*/
ALTER TABLE pago ADD COLUMN EstadoFact BOOL DEFAULT (False)


/*----------------------------------------------------------*/



/*Creamos la tabla TipoFact y cargamos los datos en él*/
CREATE TABLE TipoFact (
    IdTipoFact INT PRIMARY KEY,
    TipoFactDescr VARCHAR(3)
    );

INSERT INTO TipoFact(IdTipoFact, TipoFactDescr)
VALUES (1, 'FCA'),
(2, 'FCB'),
(3, 'FCC'),
(4, 'FCM');

/*----------------------------------------------------------*/



/*Creaamos la tabla de TipoDoc e insertamos sus datos*/
CREATE TABLE TipoDoc (
    IdTipoDoc INT PRIMARY KEY,
    TipoDocDescr VARCHAR(150)
    );

INSERT INTO tipodoc(IdTipoDoc, TipoDocDescr)
VALUES (80, 'CUIT'),
(89, 'LE'),
(90, 'LC'),
(91, 'CI extranjera'),
(96, 'DNI')
;

/*----------------------------------------------------------*/

/*Cargamos con el código de IdTipoDoc según la cantidad de dígitos con la que cuentan los DNI cargados con anterioridad en el sistema*/

UPDATE cliente set IdTipoDoc = 96 where char_length(DNICli)<=8;
UPDATE cliente set IdTipoDoc = 80 where char_length(DNICli)>8;



/*----------------------------------------------------------*/



/*Creamos la tabla TipoResp e insertamos sus datos*/
CREATE TABLE TipoResp (
    IdTipoResp INT PRIMARY KEY,
    TipoDocReso VARCHAR(150)
    );

INSERT INTO tiporesp(IdTipoResp, TipoDocReso)
VALUES (1, 'IVA Responsable Inscripto'),
(4, 'IVA sujeto exento'),
(5, 'Consumidor Final'),
(6, 'Responsable monotributo'),
(7, 'Sujeto no categorizado'),
(8, 'Proveedor del Exterior'),
(9, 'Cliente del Exterior'),
(10, 'IVA Liberado - Ley Nº 19.640'),
(11, 'IVA Responsable Inscripto - Agente de Percepción'),
(12, 'Pequeño Contribuyente Eventual'),
(13, 'Monotributista Social'),
(14,'Pequeño Contribuyente Eventual Social')
;

/*----------------------------------------------------------*/



/*Limpiamos La Condición tributaria y llevamos los datos con índices de la tabla de TipoResp*/

/*Creo columna INT que reemplazará al dato CondTrib que es VARCHAR*/
ALTER TABLE cliente ADD COLUMN IdTipoResp INT DEFAULT (5);

/*Actualizo los datos según lo que se encuentra en CondTrib*/
UPDATE cliente SET IdTipoResp=6 WHERE LEFT(CondTrib,1)="M";
UPDATE cliente SET IdTipoResp=1 WHERE LEFT(CondTrib,1)="R";
UPDATE cliente SET IdTipoResp=5 WHERE LEFT(CondTrib,1)="0";
UPDATE cliente SET IdTipoResp=5 WHERE LEFT(CondTrib,1)="C";

/*Elimino columna CondTrib y renombro IdTipoResp para evitar cambios en el código fuente*/
ALTER TABLE cliente DROP COLUMN CondTrib;
ALTER TABLE cliente CHANGE IdTipoResp CondTrib INT;

/*----------------------------------------------------------*/


/*Cambiar longitud del campo número de Cliente a 8 dígitos
ALTER TABLE cliente MODIFY NroCliente int(8) zerofill;
ALTER TABLE ncredito MODIFY IdCliente int(8) zerofill;
ALTER TABLE factura MODIFY IdCliente int(8) zerofill;


/*----------------------------------------------------------*/



/*Consulta con todos los datos que necesitamos para el xls que importa NeoFactura*/
SELECT TP.tipofactdescr AS 'Cód tipo de cbte', '1' AS PV, '' AS Número, DATE_FORMAT(F.fechaFactura, '%d/%m/%Y') AS 'Fecha de emisión', '1' AS 'Cód cond vta', C.NroCliente AS "Código cliente", concat (C.NombreCli, ' ' , C.ApellidoCli) AS 'Nombre o razón social', C.IdTipoDoc AS idTipoDocumento, C.DNICli AS 'Nro documento', C.CondTrib AS idTipoResponsable, DATE_FORMAT(CURDATE(), "10/%m/%Y") AS 'fecha servicios desde', DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), '%10/%m/%Y') AS 'fecha servicios hasta', DATE_FORMAT(CURDATE(), '%d/%m/%Y') AS 'fecha vto pago', '1' AS idLista, C.IdTipoFact AS idConcepto, C.IdPlan AS 'Cód articulo', S.nombreServ AS 'Descripción', S.PlanMegas AS 'Descripción adicional',   '1' AS 'Cantidad', P.TotalPago AS Precio, '0,00' AS '% dto', '' AS 'cód vendedor', C.mailCli AS Email, DATE_FORMAT(F.FSVenc, '%d/%m/%Y') AS 'Fecha vto', '' AS 'Percepciones', '' AS 'Referencia', '' AS 'Comprobante relacionado' 
from cliente AS C
inner join factura AS F ON C.NroCliente = F.IdCliente
inner join pago AS P ON F.NroFact = P.IdFact 
INNER JOIN servicio AS S ON C.IdPlan = S.IdPlan
inner join TipoFact AS TP ON C.IdTipoFact = TP.IdTipoFact
/*where FECHA DE PAGO BEETWEN*/

/*-----------------------------------------------------------*/


/*Armar tabla Comprobantes de Siro según vencimientos*/
SELECT c.NroCliente as 'Nro Cliente', DATE_FORMAT(f.FPVenc, '%d/%m/%Y') as '1º Vto', df.totalPago as '1º Monto', DATE_FORMAT(f.FSVenc, '%d/%m/%Y') as '2º Vto', df.totalPago2 as '2º Monto', DATE_FORMAT(f.FSVenc, '%d/%m/%Y') as '3º Vto', df.totalPago2 as '3º Monto'
FROM factura as f inner JOIN cliente as c on f.IdCliente=c.IdCliente
INNER JOIN detallefact as df on f.NroFact = df.IdFactura


/*-----------------------------------------------------------*/

/*ESTE NO VA!!!*/
/*Para la importación de padrón de clientes en Siro*/
SELECT NroCliente as '#numero de cliente o dni (8 digitos)', CONCAT(NombreCli, ' ' , ApellidoCli) AS '#nombre del cliente', '' AS 'descripcion', mailCli as 'correo electronico del cliente', '0' as 'porcentaje de tasa de interes'  FROM `cliente`

/*-----------------------------------------------------------*/

/*ESTE SI VA!!!*/
/*Para la importación de padrón de clientes en Siro*/
SELECT NroCliente as 'NroCliente', CONCAT(NombreCli, ' ' , ApellidoCli) AS 'Descripción', '' AS 'Complemento', mailCli as 'Correo electrónico', '' as 'Porcentaje', '' as 'Tipo Adhesión', '' as 'Nro Adhesión'  FROM `cliente`


